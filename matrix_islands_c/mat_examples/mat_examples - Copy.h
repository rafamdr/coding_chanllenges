#ifndef MAT_EXAMPLES_H
#define MAT_EXAMPLES_H

// --------------------------------------------------------------------------------------------------------------------
// Includes
// --------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
// --------------------------------------------------------------------------------------------------------------------

// --------------------------------------------------------------------------------------------------------------------
// Typedefs/structs
// --------------------------------------------------------------------------------------------------------------------
typedef struct MatExample_t
{
    char name[32];
    int rows;
    int cols;
    int expected_result;
    int* mat;

}MatExample_t;
// --------------------------------------------------------------------------------------------------------------------


// --------------------------------------------------------------------------------------------------------------------
// Defines/macros
// --------------------------------------------------------------------------------------------------------------------
#define ARR_MAT_GET_ITEM(m, i, j, num_cols)         *(((m) + (i) * (num_cols)) + (j))
#define ARR_MAT_SET_ITEM(m, i, j, num_cols, value)  *(((m) + (i) * (num_cols)) + (j)) = (value)
// --------------------------------------------------------------------------------------------------------------------

#define CREATE_EXAMPLE(example_ptr, count, nameex, r, c, exp, ...)                              \
    if(example_ptr == NULL)                                                                     \
    {                                                                                           \
        example_ptr = (MatExample_t*)malloc(sizeof(MatExample_t));                              \
    }                                                                                           \
    else                                                                                        \
    {                                                                                           \
        example_ptr = (MatExample_t*)realloc(example_ptr, (count + 1) * sizeof(MatExample_t));  \
    }                                                                                           \
    strcpy(example_ptr[count].name, #nameex);                                                   \
    int nameex##_mat[r * c] = __VA_ARGS__;                                                      \
    example_ptr[count].rows = r;                                                                \
    example_ptr[count].cols = c;                                                                \
    example_ptr[count].expected_result = exp;                                                   \
    example_ptr[count].mat = (int*)malloc(r * c * sizeof(int));                                 \
    memcpy(example_ptr[count].mat, nameex##_mat, r * c * sizeof(int));                          \
    count++;   
// --------------------------------------------------------------------------------------------------------------------


// --------------------------------------------------------------------------------------------------------------------
// Exported functions
// --------------------------------------------------------------------------------------------------------------------
void print_mat(MatExample_t* example);
int getExamples(MatExample_t** examples);
// --------------------------------------------------------------------------------------------------------------------

#endif /* !MAT_EXAMPLES_H */
